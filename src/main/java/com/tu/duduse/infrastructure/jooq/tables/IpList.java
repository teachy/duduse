/*
 * This file is generated by jOOQ.
 */
package com.tu.duduse.infrastructure.jooq.tables;


import com.tu.duduse.infrastructure.jooq.DefaultSchema;
import com.tu.duduse.infrastructure.jooq.Indexes;
import com.tu.duduse.infrastructure.jooq.Keys;
import com.tu.duduse.infrastructure.jooq.tables.records.IpListRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IpList extends TableImpl<IpListRecord> {

    private static final long serialVersionUID = 1586202061;

    /**
     * The reference instance of <code>ip_list</code>
     */
    public static final IpList IP_LIST = new IpList();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IpListRecord> getRecordType() {
        return IpListRecord.class;
    }

    /**
     * The column <code>ip_list.id</code>.
     */
    public final TableField<IpListRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>ip_list.ip</code>. 访问ip
     */
    public final TableField<IpListRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "访问ip");

    /**
     * The column <code>ip_list.query</code>. query关键词
     */
    public final TableField<IpListRecord, String> QUERY = createField("query", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "query关键词");

    /**
     * The column <code>ip_list.use_time</code>. 耗时
     */
    public final TableField<IpListRecord, Integer> USE_TIME = createField("use_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "耗时");

    /**
     * Create a <code>ip_list</code> table reference
     */
    public IpList() {
        this(DSL.name("ip_list"), null);
    }

    /**
     * Create an aliased <code>ip_list</code> table reference
     */
    public IpList(String alias) {
        this(DSL.name(alias), IP_LIST);
    }

    /**
     * Create an aliased <code>ip_list</code> table reference
     */
    public IpList(Name alias) {
        this(alias, IP_LIST);
    }

    private IpList(Name alias, Table<IpListRecord> aliased) {
        this(alias, aliased, null);
    }

    private IpList(Name alias, Table<IpListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> IpList(Table<O> child, ForeignKey<O, IpListRecord> key) {
        super(child, key, IP_LIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IP_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IpListRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IP_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IpListRecord> getPrimaryKey() {
        return Keys.KEY_IP_LIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IpListRecord>> getKeys() {
        return Arrays.<UniqueKey<IpListRecord>>asList(Keys.KEY_IP_LIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IpList as(String alias) {
        return new IpList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IpList as(Name alias) {
        return new IpList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IpList rename(String name) {
        return new IpList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IpList rename(Name name) {
        return new IpList(name, null);
    }
}
