/*
 * This file is generated by jOOQ.
 */
package com.tu.duduse.infrastructure.jooq.tables.records;


import com.tu.duduse.infrastructure.jooq.tables.SpiderUrl;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpiderUrlRecord extends UpdatableRecordImpl<SpiderUrlRecord> implements Record9<Integer, String, String, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 1141133226;

    /**
     * Setter for <code>spider_url.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>spider_url.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>spider_url.name</code>. 网站名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spider_url.name</code>. 网站名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spider_url.url</code>. 搜索url
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>spider_url.url</code>. 搜索url
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>spider_url.xpath</code>. 解析规则
     */
    public void setXpath(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>spider_url.xpath</code>. 解析规则
     */
    public String getXpath() {
        return (String) get(3);
    }

    /**
     * Setter for <code>spider_url.charset</code>. 网站编码
     */
    public void setCharset(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>spider_url.charset</code>. 网站编码
     */
    public String getCharset() {
        return (String) get(4);
    }

    /**
     * Setter for <code>spider_url.type</code>. 网站类型
     */
    public void setType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>spider_url.type</code>. 网站类型
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>spider_url.status</code>. 是否可用（1为可用）
     */
    public void setStatus(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>spider_url.status</code>. 是否可用（1为可用）
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>spider_url.error_num</code>. 错误次数
     */
    public void setErrorNum(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>spider_url.error_num</code>. 错误次数
     */
    public Integer getErrorNum() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>spider_url.redirect</code>. 是否允许自动重定向（0 不自动重定向）
     */
    public void setRedirect(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>spider_url.redirect</code>. 是否允许自动重定向（0 不自动重定向）
     */
    public String getRedirect() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, Integer, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, String, String, String, Integer, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SpiderUrl.SPIDER_URL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SpiderUrl.SPIDER_URL.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SpiderUrl.SPIDER_URL.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SpiderUrl.SPIDER_URL.XPATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SpiderUrl.SPIDER_URL.CHARSET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SpiderUrl.SPIDER_URL.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SpiderUrl.SPIDER_URL.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return SpiderUrl.SPIDER_URL.ERROR_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return SpiderUrl.SPIDER_URL.REDIRECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getXpath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCharset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getErrorNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getRedirect();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getXpath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCharset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getErrorNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getRedirect();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value3(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value4(String value) {
        setXpath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value5(String value) {
        setCharset(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value6(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value7(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value8(Integer value) {
        setErrorNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord value9(String value) {
        setRedirect(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpiderUrlRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Integer value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpiderUrlRecord
     */
    public SpiderUrlRecord() {
        super(SpiderUrl.SPIDER_URL);
    }

    /**
     * Create a detached, initialised SpiderUrlRecord
     */
    public SpiderUrlRecord(Integer id, String name, String url, String xpath, String charset, String type, String status, Integer errorNum, String redirect) {
        super(SpiderUrl.SPIDER_URL);

        set(0, id);
        set(1, name);
        set(2, url);
        set(3, xpath);
        set(4, charset);
        set(5, type);
        set(6, status);
        set(7, errorNum);
        set(8, redirect);
    }
}
