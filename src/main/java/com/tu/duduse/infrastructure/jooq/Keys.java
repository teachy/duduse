/*
 * This file is generated by jOOQ.
 */
package com.tu.duduse.infrastructure.jooq;


import com.tu.duduse.infrastructure.jooq.tables.IpList;
import com.tu.duduse.infrastructure.jooq.tables.Sources;
import com.tu.duduse.infrastructure.jooq.tables.SpiderBase;
import com.tu.duduse.infrastructure.jooq.tables.SpiderQueue;
import com.tu.duduse.infrastructure.jooq.tables.SpiderUnique;
import com.tu.duduse.infrastructure.jooq.tables.SpiderUrl;
import com.tu.duduse.infrastructure.jooq.tables.Tools;
import com.tu.duduse.infrastructure.jooq.tables.records.IpListRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.SourcesRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.SpiderBaseRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.SpiderQueueRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.SpiderUniqueRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.SpiderUrlRecord;
import com.tu.duduse.infrastructure.jooq.tables.records.ToolsRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<IpListRecord, Integer> IDENTITY_IP_LIST = Identities0.IDENTITY_IP_LIST;
    public static final Identity<SourcesRecord, Integer> IDENTITY_SOURCES = Identities0.IDENTITY_SOURCES;
    public static final Identity<SpiderUrlRecord, Integer> IDENTITY_SPIDER_URL = Identities0.IDENTITY_SPIDER_URL;
    public static final Identity<ToolsRecord, Integer> IDENTITY_TOOLS = Identities0.IDENTITY_TOOLS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<IpListRecord> KEY_IP_LIST_PRIMARY = UniqueKeys0.KEY_IP_LIST_PRIMARY;
    public static final UniqueKey<SourcesRecord> KEY_SOURCES_PRIMARY = UniqueKeys0.KEY_SOURCES_PRIMARY;
    public static final UniqueKey<SourcesRecord> KEY_SOURCES_URL = UniqueKeys0.KEY_SOURCES_URL;
    public static final UniqueKey<SpiderBaseRecord> KEY_SPIDER_BASE_PRIMARY = UniqueKeys0.KEY_SPIDER_BASE_PRIMARY;
    public static final UniqueKey<SpiderQueueRecord> KEY_SPIDER_QUEUE_PRIMARY = UniqueKeys0.KEY_SPIDER_QUEUE_PRIMARY;
    public static final UniqueKey<SpiderUniqueRecord> KEY_SPIDER_UNIQUE_PRIMARY = UniqueKeys0.KEY_SPIDER_UNIQUE_PRIMARY;
    public static final UniqueKey<SpiderUrlRecord> KEY_SPIDER_URL_PRIMARY = UniqueKeys0.KEY_SPIDER_URL_PRIMARY;
    public static final UniqueKey<SpiderUrlRecord> KEY_SPIDER_URL_NAME = UniqueKeys0.KEY_SPIDER_URL_NAME;
    public static final UniqueKey<ToolsRecord> KEY_TOOLS_PRIMARY = UniqueKeys0.KEY_TOOLS_PRIMARY;
    public static final UniqueKey<ToolsRecord> KEY_TOOLS_URL = UniqueKeys0.KEY_TOOLS_URL;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<IpListRecord, Integer> IDENTITY_IP_LIST = Internal.createIdentity(IpList.IP_LIST, IpList.IP_LIST.ID);
        public static Identity<SourcesRecord, Integer> IDENTITY_SOURCES = Internal.createIdentity(Sources.SOURCES, Sources.SOURCES.ID);
        public static Identity<SpiderUrlRecord, Integer> IDENTITY_SPIDER_URL = Internal.createIdentity(SpiderUrl.SPIDER_URL, SpiderUrl.SPIDER_URL.ID);
        public static Identity<ToolsRecord, Integer> IDENTITY_TOOLS = Internal.createIdentity(Tools.TOOLS, Tools.TOOLS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<IpListRecord> KEY_IP_LIST_PRIMARY = Internal.createUniqueKey(IpList.IP_LIST, "KEY_ip_list_PRIMARY", IpList.IP_LIST.ID);
        public static final UniqueKey<SourcesRecord> KEY_SOURCES_PRIMARY = Internal.createUniqueKey(Sources.SOURCES, "KEY_sources_PRIMARY", Sources.SOURCES.ID);
        public static final UniqueKey<SourcesRecord> KEY_SOURCES_URL = Internal.createUniqueKey(Sources.SOURCES, "KEY_sources_url", Sources.SOURCES.URL);
        public static final UniqueKey<SpiderBaseRecord> KEY_SPIDER_BASE_PRIMARY = Internal.createUniqueKey(SpiderBase.SPIDER_BASE, "KEY_spider_base_PRIMARY", SpiderBase.SPIDER_BASE.ID);
        public static final UniqueKey<SpiderQueueRecord> KEY_SPIDER_QUEUE_PRIMARY = Internal.createUniqueKey(SpiderQueue.SPIDER_QUEUE, "KEY_spider_queue_PRIMARY", SpiderQueue.SPIDER_QUEUE.ID);
        public static final UniqueKey<SpiderUniqueRecord> KEY_SPIDER_UNIQUE_PRIMARY = Internal.createUniqueKey(SpiderUnique.SPIDER_UNIQUE, "KEY_spider_unique_PRIMARY", SpiderUnique.SPIDER_UNIQUE.ID);
        public static final UniqueKey<SpiderUrlRecord> KEY_SPIDER_URL_PRIMARY = Internal.createUniqueKey(SpiderUrl.SPIDER_URL, "KEY_spider_url_PRIMARY", SpiderUrl.SPIDER_URL.ID);
        public static final UniqueKey<SpiderUrlRecord> KEY_SPIDER_URL_NAME = Internal.createUniqueKey(SpiderUrl.SPIDER_URL, "KEY_spider_url_name", SpiderUrl.SPIDER_URL.NAME);
        public static final UniqueKey<ToolsRecord> KEY_TOOLS_PRIMARY = Internal.createUniqueKey(Tools.TOOLS, "KEY_tools_PRIMARY", Tools.TOOLS.ID);
        public static final UniqueKey<ToolsRecord> KEY_TOOLS_URL = Internal.createUniqueKey(Tools.TOOLS, "KEY_tools_url", Tools.TOOLS.URL);
    }
}
